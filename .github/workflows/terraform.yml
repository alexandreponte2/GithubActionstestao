name: Terraform Apply

on:
  push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'
  # pull_request:
  #     paths-ignore:
  #     - '**.md'

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Some check on branch
      id: branch_check
      run: |
        echo "Running on branch ${{ github.ref }}"
        if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          echo "::set-output name=env_name::${{ secrets.AWS_ACCESS_KEY_ID }}"
        elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "::set-output name=env_name::Test"
        else
           echo "::set-output name=env_name::erro"
        fi

    - name: Install Terraform
      env:
        TERRAFORM_VERSION: "1.1.6"
      run: |
        tf_version=$TERRAFORM_VERSION
        wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        unzip terraform_"$tf_version"_linux_amd64.zip
        sudo mv terraform /usr/local/bin/

    - name: Verify Terraform version
      run: terraform --version

    - name: Terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.branch_check.outputs.env_name }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -input=false

    - name: Terraform format
      run: terraform fmt

    - name: Terraform validation
      run: terraform validate

    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.branch_check.outputs.env_name }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve -input=false
